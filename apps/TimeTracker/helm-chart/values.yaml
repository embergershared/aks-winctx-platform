# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

deployment:
  create: true
  replicaCount: 1
  image:
    repository: acrakslzaccel234.azurecr.io/timetracker
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  imagePullSecrets: []
  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}
  podSecurityContext: {}
    # fsGroup: 2000
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: 1000m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  readinessProbe: {}
    # httpGet:
    #   path: /
    #   port: http
  # Environment variables
  envFromKeyVault:
    name: ConnectionStringTimeTracker
    secretName: azsql-db-connectionstring-timetracker
  # Additional volumes on the output Deployment definition.
  secretVolume:
    name: sql-secret-csi
  volumes: {}
  # - name: sql-secret-csi
  #   csi:
  #     driver: secrets-store.csi.k8s.io
  #     readOnly: true
  #     volumeAttributes:
  #       secretProviderClass: "timetracker-sql-secret-csi"
  # Additional volumeMounts on the output Deployment definition.
  volumeMounts:
  # - name: sql-secret-csi
  #   mountPath: "/mnt/sql-secret-csi"
  #   readOnly: true
  # Node selectors
  nodeSelector:
    kubernetes.io/os: windows
  # Tolerations
  tolerations: []
  # Affinity
  affinity: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  create: true
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: LoadBalancer
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  create: false
  className: nginx-internal
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # nginx.ingress.kubernetes.io/rewrite-target: /
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: timetracker.private.contoso.com
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

secretProviderClass:
  create: true
  provider: azure
  secretName: azsql-db-connectionstring-timetracker
  tenantId: c4c9004b-43cc-4303-bfbf-0a5f7e1d0139
  keyVaultName: kvakslzaccel234
  userAssignedIdentityId: 92598350-519b-4281-a3f3-c19afb1ef214
